server {
	listen 80;
	listen [::]:80;
	server_name proxy_container.example.com;

	location / {
		return 301 https://$host$request_uri;
	}

}

server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	server_name proxy_container.example.com;
	error_log /var/log/nginx/error.log;
	access_log /var/log/nginx/access.log;
	index index.html;
	# 虽然是代理容器，但这里的root用于certbot生成well-known
	root /site/proxy_container.example.com;

	ssl_certificate /etc/letsencrypt/live/proxy_container.example.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/proxy_container.example.com/privkey.pem;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
	ssl_ciphers HIGH:!aNULL:!MD5;
	ssl_prefer_server_ciphers on;
	ssl_session_cache shared:SSL:10m;
	ssl_session_tickets off;

	location ~ /.well-known {
		allow all;
	}
	location /admin {
		return 404;
	}

	location / {
		proxy_pass http://container:80;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}

	location /subdir {
		proxy_pass http://container:8080;
		proxy_redirect off;
		proxy_buffering off;
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	}
}
